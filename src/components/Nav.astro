---
import Icon from './Icon.astro'
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import NavMenuItems from './NavMenuItems.astro'
import NavMenuFooter from './NavMenuFooter.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: t('nav.projects'), href: `/${lang}/#projects` },
	{ label: t('nav.about'), href: `/${lang}/#about` },
	{ label: t('nav.contact'), href: `/${lang}/#contact` }
]
---

<nav
	class="relative z-50 my-12 px-6 font-brand font-medium md:container md:grid md:grid-cols-nav md:items-center md:gap-4"
>
	<div class="flex justify-between gap-2 md:p-0">
		<a
			href="/"
			class="flex items-center gap-2 text-5xl font-bold lowercase text-stone-950 dark:text-stone-50"
		>
			{t('nav.brand')}
		</a>
		<menu-button class="flex items-center">
			<template>
				<button
					class="relative flex border-0 p-0 text-2xl aria-expanded:text-stone-600 [&[hidden]]:hidden"
					aria-expanded="false"
				>
					<span class="sr-only">Menu</span>
					<Icon icon="list" />
				</button>
			</template>
		</menu-button>
	</div>
	<div class="absolute inset-x-0 md:contents">
		<noscript>
			<NavMenuItems links={textLinks} />
		</noscript>
		<noscript>
			<NavMenuFooter noScript />
		</noscript>
	</div>
	<div id="menu-content-js" class="absolute inset-x-0 [&.js-enabled]:md:contents" hidden>
		<NavMenuItems links={textLinks} />
		<NavMenuFooter />
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super()

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true))
			const btn = this.querySelector('button')!

			// Hide menu (shown by default to support no-JS browsers).
			const menuContent = document.getElementById('menu-content-js')!
			menuContent.hidden = true
			// Add "js-enabled" class in JS to avoid covering content in non-JS browsers.
			menuContent.classList.add('js-enabled')

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false')
				menuContent.hidden = !expand
			}

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menuContent.hidden))

			// Hide menu button for large screens.
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches)
				btn.hidden = e.matches
			}
			const mediaQueries = window.matchMedia('(min-width: 768px)')
			handleViewports(mediaQueries)
			mediaQueries.addEventListener('change', handleViewports)
		}
	}
	customElements.define('menu-button', MenuButton)
</script>
