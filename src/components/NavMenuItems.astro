---
interface Link {
	//Factor these types for reuse.
	label: string
	href: string
}
interface Props {
	links: Link[]
}

const { links } = Astro.props

//Check how to consider forced-colors: active
---

<ul
	class="m-0 flex list-none flex-col gap-2 border-b border-solid border-stone-300 bg-stone-200 p-6 md:flex-row md:gap-10 md:border-0 md:bg-transparent md:p-2 dark:border-stone-800 dark:bg-stone-900 md:dark:bg-transparent"
>
	{
		links.map(({ label, href }) => (
			<li>
				<a
					aria-current={Astro.url.pathname === href}
					class:list={[
						'inline-block text-xl font-medium tracking-wide hover:text-stone-800 focus:text-stone-900 md:px-1 md:transition hover:dark:text-stone-200 focus:dark:text-stone-100',
						{
							'text-stone-950 dark:text-stone-50':
								Astro.url.pathname === href || (href !== '/' && Astro.url.pathname.startsWith(href))
						}
					]}
					href={href}
				>
					{label}
				</a>
			</li>
		))
	}
</ul>
